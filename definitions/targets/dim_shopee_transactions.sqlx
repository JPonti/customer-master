config {
  type: "incremental",
  tags:["shopee"],
  uniqueKey: ["customer_guid","transaction_id","product"],
  bigquery: {
    partitionBy: "transaction_date"
  }
}

SELECT 
  c.customer_guid,
  CASE WHEN o.party_id = 6 THEN 'Shopee'
        WHEN o.party_id = 317799 THEN 'Shopee (Tiered Pricing)'
        WHEN o.party_id = 661556 THEN 'SHP (Reverse Logistics)'
      END as product,
  id as transaction_id,
  DATE(o.created_at, 'Asia/Manila') as transaction_date,
  o.pickup_address_id,
  o.delivery_address_id,
  o.return_address_id
FROM ${ref("consumer_orders")} o
JOIN ${ref("dim_customer_accounts")} c ON SAFE_CAST(c.account_id AS INT) = COALESCE(SAFE_CAST(JSON_EXTRACT_SCALAR(o.metadata,'$.shop_id') AS INT64), 0)
WHERE party_id IN (6) AND c.product IN ('Shopee') 
${when(incremental(), ` AND o.id NOT IN (SELECT transaction_id FROM ${self()} WHERE product = 'Shopee')
  AND DATE(base_loaded_at) >= DATE_SUB(CURRENT_DATE('Asia/Manila'), interval 1 DAY)`)}

UNION DISTINCT

SELECT 
  c.customer_guid,
  CASE WHEN o.party_id = 6 THEN 'Shopee'
        WHEN o.party_id = 317799 THEN 'Shopee (Tiered Pricing)'
        WHEN o.party_id = 661556 THEN 'SHP (Reverse Logistics)'
      END as product,
  id as transaction_id,
  DATE(o.created_at, 'Asia/Manila') as transaction_date,
  o.pickup_address_id,
  o.delivery_address_id,
  o.return_address_id
FROM ${ref("consumer_orders")} o
JOIN ${ref("dim_customer_accounts")} c ON SAFE_CAST(c.account_id AS INT) = COALESCE(SAFE_CAST(JSON_EXTRACT_SCALAR(o.metadata,'$.shop_id') AS INT64), 0)
WHERE party_id IN (317799) AND c.product IN ('Shopee (Tiered Pricing)')
${when(incremental(), ` AND o.id NOT IN (SELECT transaction_id FROM ${self()} WHERE product = 'Shopee (Tiered Pricing)')
  AND DATE(base_loaded_at) >= DATE_SUB(CURRENT_DATE('Asia/Manila'), interval 1 DAY)`)}

UNION DISTINCT
SELECT 
  c.customer_guid,
  CASE WHEN o.party_id = 6 THEN 'Shopee'
        WHEN o.party_id = 317799 THEN 'Shopee (Tiered Pricing)'
        WHEN o.party_id = 661556 THEN 'SHP (Reverse Logistics)'
      END as product,
  id as transaction_id,
  DATE(o.created_at, 'Asia/Manila') as transaction_date,
  o.pickup_address_id,
  o.delivery_address_id,
  o.return_address_id
FROM ${ref("consumer_orders")} o
JOIN ${ref("dim_customer_accounts")} c ON SAFE_CAST(c.account_id AS INT) = COALESCE(SAFE_CAST(JSON_EXTRACT_SCALAR(o.metadata,'$.shop_id') AS INT64), 0)
WHERE party_id IN (661556) AND c.product IN ('SHP (Reverse Logistics)')
${when(incremental(), ` AND o.id NOT IN (SELECT transaction_id FROM ${self()} WHERE product = 'SHP (Reverse Logistics)')
  AND DATE(base_loaded_at) >= DATE_SUB(CURRENT_DATE('Asia/Manila'), interval 1 DAY)`)}

