config {
  type: "incremental",
  uniqueKey: ["account_id","product"],
  bigquery: {
    partitionBy: "registration_date",
    updatePartitionFilter:
        "registration_date >= DATE_SUB(CURRENT_DATE('Asia/Manila'), interval 1 DAY)"
  }
}

-- SELECT * 
-- from ${ref("dim_shopee_accounts_view")}
-- -- ${when(incremental(), `where registration_date > (select max(registration_date) from ${self()})`)}
-- WHERE account_id IS NOT NULL
-- ${when(incremental(), `AND  registration_date >= DATE_SUB(CURRENT_DATE('Asia/Manila'), interval 1 DAY)`)}

SELECT
    CASE
        WHEN o.party_id IN (6,317799,661556) THEN SAFE_CAST(JSON_EXTRACT_SCALAR(metadata,'$.shop_id') AS INT64)
        ELSE o.party_id
    END AS account_id,
    CAST(NULL AS STRING) as firebase_id,
    CASE WHEN o.party_id IN (9) THEN 'buyer'
        WHEN o.party_id IN (6,317799,661556,323063, 323064,683375, 215744) THEN 'merchant' 
        ELSE NULL END as customer_type,
    MIN(DATE(o.created_at, 'Asia/Manila')) as registration_date,  
    MIN(DATETIME(o.created_at, 'Asia/Manila')) as registration_time,  
    org.name as product
FROM `data-pipeline-241307.base_f3.consumer_orders` o
JOIN `data-pipeline-241307.base_f3.core_organizations` org ON org.party_id = o.service_id
WHERE o.party_id IN (6,317799,661556)
${when(incremental(), `AND  DATE(o.base_loaded_at) >= DATE_SUB(CURRENT_DATE('Asia/Manila'), interval 1 DAY)
  AND org.name NOT IN (SELECT product FROM ${self()} WHERE account_id = SAFE_CAST(JSON_EXTRACT_SCALAR(metadata,'$.shop_id') AS INT64))`)}
    -- AND SAFE_CAST(JSON_EXTRACT_SCALAR(metadata,'$.shop_id') AS INT64) NOT IN (SELECT account_id FROM ${self()})
GROUP BY 1,2,3,6


UNION DISTINCT

SELECT 
  0 as account_id,
  CAST(NULL AS STRING) as firebase_id,
  'merchant'  as customer_type,
   NULL as registration_date,  
   NULL as registration_time,  
  'Shopee' as product

UNION DISTINCT

SELECT 
  0 as account_id,
  CAST(NULL AS STRING) as firebase_id,
  'merchant'  as customer_type,
   NULL as registration_date,  
   NULL as registration_time,  
  'Shopee (Tiered Pricing)' as product

UNION DISTINCT

SELECT 
  0 as account_id,
  CAST(NULL AS STRING) as firebase_id,
  'merchant'  as customer_type,
   NULL as registration_date,  
   NULL as registration_time,  
  'SHP (Reverse Logistics)' as product